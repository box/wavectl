# Minimal makefile for Sphinx documentation
#

# You can set these variables from the command line.
SPHINXOPTS    = -W
SPHINXBUILD   = sphinx-build
SPHINXPROJ    = wavectl
SOURCEDIR     = .
BUILDDIR      = _build

# Put it first so that "make" without argument is like "make help".
help:
	@$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)

.PHONY: help Makefile commandReference

# Catch-all target: route all unknown targets to Sphinx using the new
# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
# %: Makefile
	# @$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)


MAKEFILE_DIR := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
PANDOC_OPTIONS :=  -f markdown_strict -t gfm --wrap=none --include-in-header AutoGeneratedHeader.txt
SPHINX_BUILDEER := text

# Create the command reference
# WIth PYTHONPATH, wavectl executions use the most recent version in the repo.
all:
	set -x; \
	rm -rf "$(BUILDDIR)" &&\
	PYTHONPATH=$(realpath ../../):$(realpath ../../test) \
	HOME=/tmp/Users/someuser \
	PATH=$(realpath ../)/bin:$(PATH) \
	$(SPHINXBUILD) -M $(SPHINX_BUILDEER) "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) &&\
	\
	for file in \
		AdvancedGrep \
		BrowserIntegration \
		CommandLine \
		CommandReference \
		GitIntegration \
		RepetitiveEditing \
		Templating\
		WavectlConfig \
	; do  \
	pandoc $(PANDOC_OPTIONS) $(MAKEFILE_DIR)/_build/$(SPHINX_BUILDEER)/$${file}.txt  -o $(shell dirname $(MAKEFILE_DIR))/$${file}.md; \
	done && \
	pandoc $(PANDOC_OPTIONS) $(MAKEFILE_DIR)/_build/$(SPHINX_BUILDEER)/README.txt  -o $(shell dirname $(shell dirname $(MAKEFILE_DIR)))/README.md
